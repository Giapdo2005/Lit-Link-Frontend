{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3000/api\";\n\n// get all books from backend\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/books`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchBooks -> error\", error);\n  }\n};\n\n// add book to the database\nexport const addBook = async bookData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/books`, bookData);\n    return response.data;\n  } catch (error) {\n    console.error(\"addBook -> error\", error);\n    throw error;\n  }\n};\n\n// update book status to the database\nexport const updateBookStatus = async (id, status) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/books/${id}`, {\n      read: status\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"updateBookStatus -> error\", error);\n    throw error;\n  }\n};\n\n// delete book from the database\nexport const deleteSelectedBook = async id => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/books/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"deleteBook -> error\", error);\n    throw error;\n  }\n};\n\n// check if user exists for login auth\nexport const handleLogin = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/login`, {\n      email,\n      password\n    });\n    return response.data.user;\n  } catch (error) {\n    var _error$response;\n    console.error(\"login unsuccessful\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// signup route\nexport const handleSignup = async (fullname, email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/signup`, {\n      fullname,\n      email,\n      password\n    });\n    return response.data.user;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Signup unsuccessful\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchBooks","response","get","data","error","console","addBook","bookData","post","updateBookStatus","id","status","put","read","deleteSelectedBook","delete","handleLogin","email","password","user","_error$response","message","handleSignup","fullname","_error$response2"],"sources":["/Users/giapdo/Desktop/personal_projects/read-together/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3000/api\";\n\n// get all books from backend\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/books`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchBooks -> error\", error);\n  }\n};\n\n// add book to the database\nexport const addBook = async (bookData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/books`, bookData);\n    return response.data;\n  } catch (error) {\n    console.error(\"addBook -> error\", error);\n    throw error;\n  }\n};\n\n// update book status to the database\nexport const updateBookStatus = async (id, status) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/books/${id}`, {\n      read: status,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"updateBookStatus -> error\", error);\n    throw error;\n  }\n};\n\n// delete book from the database\nexport const deleteSelectedBook = async (id) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/books/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"deleteBook -> error\", error);\n    throw error;\n  }\n};\n\n// check if user exists for login auth\nexport const handleLogin = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/login`, {\n      email,\n      password,\n    });\n    return response.data.user;\n  } catch (error) {\n    console.error(\"login unsuccessful\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// signup route\nexport const handleSignup = async (fullname, email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/signup`, {\n      fullname,\n      email,\n      password,\n    });\n    return response.data.user;\n  } catch (error) {\n    console.error(\"Signup unsuccessful\", error.response?.data || error.message);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3000/api\";\n\n// get all books from database\nexport const fetchBooks = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/books/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchBooks -> error\", error);\n  }\n};\n\n// get all users from database\nexport const fetchUsers = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchUsers -> error\", error);\n  }\n};\n\n// add book to loggedInUser to the database\nexport const addBook = async (id, bookData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/books/${id}`, bookData);\n    return response.data.book;\n  } catch (error) {\n    console.error(\"addBook -> error\", error);\n    throw error;\n  }\n};\n\n// update book status of loggedInUser to the database\nexport const updateBookStatus = async (userId, bookId, status) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/users/${userId}/books/${bookId}`, {\n      read: status\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"updateBookStatus -> error\", error);\n    throw error;\n  }\n};\n\n// delete book from the database\nexport const deleteSelectedBook = async (userId, bookId) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/users/${userId}/books/${bookId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"deleteBook -> error\", error);\n    throw error;\n  }\n};\n\n// check if user exists for login auth\nexport const handleLogin = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/login`, {\n      email,\n      password\n    });\n    return response.data.user;\n  } catch (error) {\n    var _error$response;\n    console.error(\"login unsuccessful\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// signup route\nexport const handleSignup = async (fullname, email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/signup`, {\n      fullname,\n      email,\n      password\n    });\n    return response.data.user;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Signup unsuccessful\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  }\n};\n\n// addFriend route\nexport const addFriend = async (userId, friendId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/${userId}/friends/${friendId}`);\n    console.log(response.data.friend);\n    return response.data.friend;\n  } catch (error) {\n    console.error(\"Add Friend unsuccessfully\", error.message);\n  }\n};\n\n// deleteFriend route\nexport const deleteFriend = async (userId, friendId) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/users/${userId}/friends/${friendId}`);\n    return response.data.deletedFriend;\n  } catch (error) {\n    console.error(\"deleteFriend unsuccessful\", error.message);\n  }\n};\n\n// check if user exists\nexport const checkUser = async email => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/check`, {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"checkUser -> not found\", error.message);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchBooks","id","response","get","data","error","console","fetchUsers","addBook","bookData","post","book","updateBookStatus","userId","bookId","status","put","read","deleteSelectedBook","delete","handleLogin","email","password","user","_error$response","message","handleSignup","fullname","_error$response2","addFriend","friendId","log","friend","deleteFriend","deletedFriend","checkUser"],"sources":["/Users/giapdo/Desktop/personal_projects/read-together/front-end/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3000/api\";\n\n// get all books from database\nexport const fetchBooks = async (id) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/books/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchBooks -> error\", error);\n  }\n};\n\n// get all users from database\nexport const fetchUsers = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchUsers -> error\", error);\n  }\n};\n\n// add book to loggedInUser to the database\nexport const addBook = async (id, bookData) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/users/books/${id}`,\n      bookData\n    );\n    return response.data.book;\n  } catch (error) {\n    console.error(\"addBook -> error\", error);\n    throw error;\n  }\n};\n\n// update book status of loggedInUser to the database\nexport const updateBookStatus = async (userId, bookId, status) => {\n  try {\n    const response = await axios.put(\n      `${API_BASE_URL}/users/${userId}/books/${bookId}`,\n      {\n        read: status,\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"updateBookStatus -> error\", error);\n    throw error;\n  }\n};\n\n// delete book from the database\nexport const deleteSelectedBook = async (userId, bookId) => {\n  try {\n    const response = await axios.delete(\n      `${API_BASE_URL}/users/${userId}/books/${bookId}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"deleteBook -> error\", error);\n    throw error;\n  }\n};\n\n// check if user exists for login auth\nexport const handleLogin = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/login`, {\n      email,\n      password,\n    });\n    return response.data.user;\n  } catch (error) {\n    console.error(\"login unsuccessful\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// signup route\nexport const handleSignup = async (fullname, email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/signup`, {\n      fullname,\n      email,\n      password,\n    });\n    return response.data.user;\n  } catch (error) {\n    console.error(\"Signup unsuccessful\", error.response?.data || error.message);\n  }\n};\n\n// addFriend route\nexport const addFriend = async (userId, friendId) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/users/${userId}/friends/${friendId}`\n    );\n\n    console.log(response.data.friend);\n    return response.data.friend;\n  } catch (error) {\n    console.error(\"Add Friend unsuccessfully\", error.message);\n  }\n};\n\n// deleteFriend route\nexport const deleteFriend = async (userId, friendId) => {\n  try {\n    const response = await axios.delete(\n      `${API_BASE_URL}/users/${userId}/friends/${friendId}`\n    );\n    return response.data.deletedFriend;\n  } catch (error) {\n    console.error(\"deleteFriend unsuccessful\", error.message);\n  }\n};\n\n// check if user exists\nexport const checkUser = async (email) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/check`, {\n      email,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"checkUser -> not found\", error.message);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
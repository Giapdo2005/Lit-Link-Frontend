{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3000/api\";\nconst googleKey = process.env.GOOGLE_BOOKS_API_KEY;\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/books`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchBooks -> error\", error);\n  }\n};\nexport const addBook = async bookData => {\n  try {\n    const respose = await axios.post(`${API_BASE_URL}/books`, bookData);\n    const encodedTitle = encodeURIComponent(bookData.title.replace(/\\s/g, \"+\"));\n    const encodedAuthor = encodeURIComponent(bookData.author.replace(/\\s/g, \"+\"));\n    const bookDetails = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=intitle:${encodedTitle}inauthor:${encodedAuthor}&key=${googleKey}`);\n    return respose.data;\n  } catch (error) {\n    console.error(\"addBook -> error\", error);\n    throw error;\n  }\n};\nexport const updateBookStatus = async (id, status) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/books/${id}`, {\n      read: status\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"updateBookStatus -> error\", error);\n    throw error;\n  }\n};\nexport const deleteSelectedBook = async id => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/books/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"deleteBook -> error\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","googleKey","process","env","GOOGLE_BOOKS_API_KEY","fetchBooks","response","get","data","error","console","addBook","bookData","respose","post","encodedTitle","encodeURIComponent","title","replace","encodedAuthor","author","bookDetails","updateBookStatus","id","status","put","read","deleteSelectedBook","delete"],"sources":["/Users/giapdo/Desktop/personal_projects/read-together/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:3000/api\";\nconst googleKey = process.env.GOOGLE_BOOKS_API_KEY;\n\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/books`);\n    return response.data;\n  } catch (error) {\n    console.error(\"fetchBooks -> error\", error);\n  }\n};\n\nexport const addBook = async (bookData) => {\n  try {\n    const respose = await axios.post(`${API_BASE_URL}/books`, bookData);\n    const encodedTitle = encodeURIComponent(bookData.title.replace(/\\s/g, \"+\"));\n    const encodedAuthor = encodeURIComponent(\n      bookData.author.replace(/\\s/g, \"+\")\n    );\n    const bookDetails = await axios.get(\n      `https://www.googleapis.com/books/v1/volumes?q=intitle:${encodedTitle}inauthor:${encodedAuthor}&key=${googleKey}`\n    );\n\n    return respose.data;\n  } catch (error) {\n    console.error(\"addBook -> error\", error);\n    throw error;\n  }\n};\n\nexport const updateBookStatus = async (id, status) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/books/${id}`, {\n      read: status,\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"updateBookStatus -> error\", error);\n    throw error;\n  }\n};\n\nexport const deleteSelectedBook = async (id) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/books/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"deleteBook -> error\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAChD,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAElD,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,YAAY,QAAQ,CAAC;IACzD,OAAOM,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGd,YAAY,QAAQ,EAAEY,QAAQ,CAAC;IACnE,MAAMG,YAAY,GAAGC,kBAAkB,CAACJ,QAAQ,CAACK,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC3E,MAAMC,aAAa,GAAGH,kBAAkB,CACtCJ,QAAQ,CAACQ,MAAM,CAACF,OAAO,CAAC,KAAK,EAAE,GAAG,CACpC,CAAC;IACD,MAAMG,WAAW,GAAG,MAAMtB,KAAK,CAACQ,GAAG,CACjC,yDAAyDQ,YAAY,YAAYI,aAAa,QAAQlB,SAAS,EACjH,CAAC;IAED,OAAOY,OAAO,CAACL,IAAI;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,MAAM,KAAK;EACpD,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMP,KAAK,CAAC0B,GAAG,CAAC,GAAGzB,YAAY,UAAUuB,EAAE,EAAE,EAAE;MAC9DG,IAAI,EAAEF;IACR,CAAC,CAAC;IACF,OAAOlB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMkB,kBAAkB,GAAG,MAAOJ,EAAE,IAAK;EAC9C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMP,KAAK,CAAC6B,MAAM,CAAC,GAAG5B,YAAY,UAAUuB,EAAE,EAAE,CAAC;IAClE,OAAOjB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}